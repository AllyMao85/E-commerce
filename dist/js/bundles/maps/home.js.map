{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/js/home.js","node_modules/sweetalert2/dist/sweetalert2.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjfile":"../home.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar _sweetalert = require('sweetalert2');\n\nvar _sweetalert2 = _interopRequireDefault(_sweetalert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _sweetalert2.default)({\n  title: 'title',\n  text: 'hello, world',\n  showCancelButton: true,\n  confirmButtonText: 'yes',\n  cancelButtonText: 'no',\n  timer: 3000\n});\n//# sourceMappingURL=maps/home.js.map\n","/*!\n * sweetalert2 v6.6.1\n * Released under the MIT License.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Sweetalert2 = factory());\n}(this, (function () { 'use strict';\n\nvar defaultParams = {\n  title: '',\n  titleText: '',\n  text: '',\n  html: '',\n  type: null,\n  customClass: '',\n  target: 'body',\n  animation: true,\n  allowOutsideClick: true,\n  allowEscapeKey: true,\n  allowEnterKey: true,\n  showConfirmButton: true,\n  showCancelButton: false,\n  preConfirm: null,\n  confirmButtonText: 'OK',\n  confirmButtonColor: '#3085d6',\n  confirmButtonClass: null,\n  cancelButtonText: 'Cancel',\n  cancelButtonColor: '#aaa',\n  cancelButtonClass: null,\n  buttonsStyling: true,\n  reverseButtons: false,\n  focusCancel: false,\n  showCloseButton: false,\n  showLoaderOnConfirm: false,\n  imageUrl: null,\n  imageWidth: null,\n  imageHeight: null,\n  imageClass: null,\n  timer: null,\n  width: 500,\n  padding: 20,\n  background: '#fff',\n  input: null,\n  inputPlaceholder: '',\n  inputValue: '',\n  inputOptions: {},\n  inputAutoTrim: true,\n  inputClass: null,\n  inputAttributes: {},\n  inputValidator: null,\n  progressSteps: [],\n  currentProgressStep: null,\n  progressStepsDistance: '40px',\n  onOpen: null,\n  onClose: null\n};\n\nvar swalPrefix = 'swal2-';\n\nvar prefix = function prefix(items) {\n  var result = {};\n  for (var i in items) {\n    result[items[i]] = swalPrefix + items[i];\n  }\n  return result;\n};\n\nvar swalClasses = prefix(['container', 'shown', 'iosfix', 'modal', 'overlay', 'fade', 'show', 'hide', 'noanimation', 'close', 'title', 'content', 'buttonswrapper', 'confirm', 'cancel', 'icon', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea', 'inputerror', 'validationerror', 'progresssteps', 'activeprogressstep', 'progresscircle', 'progressline', 'loading', 'styled']);\n\nvar iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\n/*\n * Set hover, active and focus-states for buttons (source: http://www.sitepoint.com/javascript-generate-lighter-darker-color)\n */\nvar colorLuminance = function colorLuminance(hex, lum) {\n  // Validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, '');\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // Convert to decimal and change luminosity\n  var rgb = '#';\n  for (var i = 0; i < 3; i++) {\n    var c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += ('00' + c).substr(c.length);\n  }\n\n  return rgb;\n};\n\nvar uniqueArray = function uniqueArray(arr) {\n  var result = [];\n  for (var i in arr) {\n    if (result.indexOf(arr[i]) === -1) {\n      result.push(arr[i]);\n    }\n  }\n  return result;\n};\n\n/* global MouseEvent */\n\n// Remember state in cases where opening and handling a modal will fiddle with it.\nvar states = {\n  previousWindowKeyDown: null,\n  previousActiveElement: null,\n  previousBodyPadding: null\n};\n\n/*\n * Add modal + overlay to DOM\n */\nvar init = function init(params) {\n  if (typeof document === 'undefined') {\n    console.error('SweetAlert2 requires document to initialize');\n    return;\n  }\n\n  var container = document.createElement('div');\n  container.className = swalClasses.container;\n  container.innerHTML = sweetHTML;\n\n  var targetElement = document.querySelector(params.target);\n  if (!targetElement) {\n    console.warn('SweetAlert2: Can\\'t find the target \"' + params.target + '\"');\n    targetElement = document.body;\n  }\n  targetElement.appendChild(container);\n\n  var modal = getModal();\n  var input = getChildByClass(modal, swalClasses.input);\n  var file = getChildByClass(modal, swalClasses.file);\n  var range = modal.querySelector('.' + swalClasses.range + ' input');\n  var rangeOutput = modal.querySelector('.' + swalClasses.range + ' output');\n  var select = getChildByClass(modal, swalClasses.select);\n  var checkbox = modal.querySelector('.' + swalClasses.checkbox + ' input');\n  var textarea = getChildByClass(modal, swalClasses.textarea);\n\n  input.oninput = function () {\n    sweetAlert.resetValidationError();\n  };\n\n  input.onkeydown = function (event) {\n    setTimeout(function () {\n      if (event.keyCode === 13 && params.allowEnterKey) {\n        event.stopPropagation();\n        sweetAlert.clickConfirm();\n      }\n    }, 0);\n  };\n\n  file.onchange = function () {\n    sweetAlert.resetValidationError();\n  };\n\n  range.oninput = function () {\n    sweetAlert.resetValidationError();\n    rangeOutput.value = range.value;\n  };\n\n  range.onchange = function () {\n    sweetAlert.resetValidationError();\n    range.previousSibling.value = range.value;\n  };\n\n  select.onchange = function () {\n    sweetAlert.resetValidationError();\n  };\n\n  checkbox.onchange = function () {\n    sweetAlert.resetValidationError();\n  };\n\n  textarea.oninput = function () {\n    sweetAlert.resetValidationError();\n  };\n\n  return modal;\n};\n\n/*\n * Manipulate DOM\n */\n\nvar sweetHTML = ('\\n <div role=\"dialog\" aria-labelledby=\"' + swalClasses.title + '\" aria-describedby=\"' + swalClasses.content + '\" class=\"' + swalClasses.modal + '\" tabindex=\"-1\">\\n   <ul class=\"' + swalClasses.progresssteps + '\"></ul>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.error + '\">\\n     <span class=\"swal2-x-mark\"><span class=\"swal2-x-mark-line-left\"></span><span class=\"swal2-x-mark-line-right\"></span></span>\\n   </div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.question + '\">?</div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.warning + '\">!</div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.info + '\">i</div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.success + '\">\\n     <div class=\"swal2-success-circular-line-left\"></div>\\n     <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\\n     <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\\n     <div class=\"swal2-success-circular-line-right\"></div>\\n   </div>\\n   <img class=\"' + swalClasses.image + '\">\\n   <h2 class=\"' + swalClasses.title + '\" id=\"' + swalClasses.title + '\"></h2>\\n   <div id=\"' + swalClasses.content + '\" class=\"' + swalClasses.content + '\"></div>\\n   <input class=\"' + swalClasses.input + '\">\\n   <input type=\"file\" class=\"' + swalClasses.file + '\">\\n   <div class=\"' + swalClasses.range + '\">\\n     <output></output>\\n     <input type=\"range\">\\n   </div>\\n   <select class=\"' + swalClasses.select + '\"></select>\\n   <div class=\"' + swalClasses.radio + '\"></div>\\n   <label for=\"' + swalClasses.checkbox + '\" class=\"' + swalClasses.checkbox + '\">\\n     <input type=\"checkbox\">\\n   </label>\\n   <textarea class=\"' + swalClasses.textarea + '\"></textarea>\\n   <div class=\"' + swalClasses.validationerror + '\"></div>\\n   <div class=\"' + swalClasses.buttonswrapper + '\">\\n     <button type=\"button\" class=\"' + swalClasses.confirm + '\">OK</button>\\n     <button type=\"button\" class=\"' + swalClasses.cancel + '\">Cancel</button>\\n   </div>\\n   <button type=\"button\" class=\"' + swalClasses.close + '\" aria-label=\"Close this dialog\">&times;</button>\\n </div>\\n').replace(/(^|\\n)\\s*/g, '');\n\nvar getContainer = function getContainer() {\n  return document.body.querySelector('.' + swalClasses.container);\n};\n\nvar getModal = function getModal() {\n  return getContainer() ? getContainer().querySelector('.' + swalClasses.modal) : null;\n};\n\nvar getIcons = function getIcons() {\n  var modal = getModal();\n  return modal.querySelectorAll('.' + swalClasses.icon);\n};\n\nvar elementByClass = function elementByClass(className) {\n  return getContainer() ? getContainer().querySelector('.' + className) : null;\n};\n\nvar getTitle = function getTitle() {\n  return elementByClass(swalClasses.title);\n};\n\nvar getContent = function getContent() {\n  return elementByClass(swalClasses.content);\n};\n\nvar getImage = function getImage() {\n  return elementByClass(swalClasses.image);\n};\n\nvar getButtonsWrapper = function getButtonsWrapper() {\n  return elementByClass(swalClasses.buttonswrapper);\n};\n\nvar getProgressSteps = function getProgressSteps() {\n  return elementByClass(swalClasses.progresssteps);\n};\n\nvar getValidationError = function getValidationError() {\n  return elementByClass(swalClasses.validationerror);\n};\n\nvar getConfirmButton = function getConfirmButton() {\n  return elementByClass(swalClasses.confirm);\n};\n\nvar getCancelButton = function getCancelButton() {\n  return elementByClass(swalClasses.cancel);\n};\n\nvar getCloseButton = function getCloseButton() {\n  return elementByClass(swalClasses.close);\n};\n\nvar getFocusableElements = function getFocusableElements(focusCancel) {\n  var buttons = [getConfirmButton(), getCancelButton()];\n  if (focusCancel) {\n    buttons.reverse();\n  }\n  var focusableElements = buttons.concat(Array.prototype.slice.call(getModal().querySelectorAll('button, input:not([type=hidden]), textarea, select, a, *[tabindex]:not([tabindex=\"-1\"])')));\n  return uniqueArray(focusableElements);\n};\n\nvar hasClass = function hasClass(elem, className) {\n  if (elem.classList) {\n    return elem.classList.contains(className);\n  }\n  return false;\n};\n\nvar focusInput = function focusInput(input) {\n  input.focus();\n\n  // place cursor at end of text in text input\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915/1331425\n    var val = input.value;\n    input.value = '';\n    input.value = val;\n  }\n};\n\nvar addClass = function addClass(elem, className) {\n  if (!elem || !className) {\n    return;\n  }\n  var classes = className.split(/\\s+/).filter(Boolean);\n  classes.forEach(function (className) {\n    elem.classList.add(className);\n  });\n};\n\nvar removeClass = function removeClass(elem, className) {\n  if (!elem || !className) {\n    return;\n  }\n  var classes = className.split(/\\s+/).filter(Boolean);\n  classes.forEach(function (className) {\n    elem.classList.remove(className);\n  });\n};\n\nvar getChildByClass = function getChildByClass(elem, className) {\n  for (var i = 0; i < elem.childNodes.length; i++) {\n    if (hasClass(elem.childNodes[i], className)) {\n      return elem.childNodes[i];\n    }\n  }\n};\n\nvar show = function show(elem, display) {\n  if (!display) {\n    display = 'block';\n  }\n  elem.style.opacity = '';\n  elem.style.display = display;\n};\n\nvar hide = function hide(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'none';\n};\n\nvar empty = function empty(elem) {\n  while (elem.firstChild) {\n    elem.removeChild(elem.firstChild);\n  }\n};\n\n// borrowed from jqeury $(elem).is(':visible') implementation\nvar isVisible = function isVisible(elem) {\n  return elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length;\n};\n\nvar removeStyleProperty = function removeStyleProperty(elem, property) {\n  if (elem.style.removeProperty) {\n    elem.style.removeProperty(property);\n  } else {\n    elem.style.removeAttribute(property);\n  }\n};\n\nvar fireClick = function fireClick(node) {\n  if (!isVisible(node)) {\n    return false;\n  }\n\n  // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\n  // Then fixed for today's Chrome browser.\n  if (typeof MouseEvent === 'function') {\n    // Up-to-date approach\n    var mevt = new MouseEvent('click', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    });\n    node.dispatchEvent(mevt);\n  } else if (document.createEvent) {\n    // Fallback\n    var evt = document.createEvent('MouseEvents');\n    evt.initEvent('click', false, false);\n    node.dispatchEvent(evt);\n  } else if (document.createEventObject) {\n    node.fireEvent('onclick');\n  } else if (typeof node.onclick === 'function') {\n    node.onclick();\n  }\n};\n\nvar animationEndEvent = function () {\n  var testEl = document.createElement('div');\n  var transEndEventNames = {\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'OAnimation': 'oAnimationEnd oanimationend',\n    'msAnimation': 'MSAnimationEnd',\n    'animation': 'animationend'\n  };\n  for (var i in transEndEventNames) {\n    if (transEndEventNames.hasOwnProperty(i) && testEl.style[i] !== undefined) {\n      return transEndEventNames[i];\n    }\n  }\n\n  return false;\n}();\n\n// Reset previous window keydown handler and focued element\nvar resetPrevState = function resetPrevState() {\n  window.onkeydown = states.previousWindowKeyDown;\n  if (states.previousActiveElement && states.previousActiveElement.focus) {\n    var x = window.scrollX;\n    var y = window.scrollY;\n    states.previousActiveElement.focus();\n    if (x && y) {\n      // IE has no scrollX/scrollY support\n      window.scrollTo(x, y);\n    }\n  }\n};\n\n// Measure width of scrollbar\n// https://github.com/twbs/bootstrap/blob/master/js/modal.js#L279-L286\nvar measureScrollbar = function measureScrollbar() {\n  var supportsTouch = 'ontouchstart' in window || navigator.msMaxTouchPoints;\n  if (supportsTouch) {\n    return 0;\n  }\n  var scrollDiv = document.createElement('div');\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n};\n\n// JavaScript Debounce Function\n// Simplivied version of https://davidwalsh.name/javascript-debounce-function\nvar debounce = function debounce(func, wait) {\n  var timeout = void 0;\n  return function () {\n    var later = function later() {\n      timeout = null;\n      func();\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar modalParams = _extends({}, defaultParams);\nvar queue = [];\nvar swal2Observer = void 0;\n\n/*\n * Set type, text and actions on modal\n */\nvar setParameters = function setParameters(params) {\n  var modal = getModal() || init(params);\n\n  for (var param in params) {\n    if (!defaultParams.hasOwnProperty(param) && param !== 'extraParams') {\n      console.warn('SweetAlert2: Unknown parameter \"' + param + '\"');\n    }\n  }\n\n  // set modal width and margin-left\n  modal.style.width = typeof params.width === 'number' ? params.width + 'px' : params.width;\n\n  modal.style.padding = params.padding + 'px';\n  modal.style.background = params.background;\n  var successIconParts = modal.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n  for (var i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.background = params.background;\n  }\n\n  var title = getTitle();\n  var content = getContent();\n  var buttonsWrapper = getButtonsWrapper();\n  var confirmButton = getConfirmButton();\n  var cancelButton = getCancelButton();\n  var closeButton = getCloseButton();\n\n  // Title\n  if (params.titleText) {\n    title.innerText = params.titleText;\n  } else {\n    title.innerHTML = params.title.split('\\n').join('<br>');\n  }\n\n  // Content\n  if (params.text || params.html) {\n    if (_typeof(params.html) === 'object') {\n      content.innerHTML = '';\n      if (0 in params.html) {\n        for (var _i = 0; _i in params.html; _i++) {\n          content.appendChild(params.html[_i].cloneNode(true));\n        }\n      } else {\n        content.appendChild(params.html.cloneNode(true));\n      }\n    } else if (params.html) {\n      content.innerHTML = params.html;\n    } else if (params.text) {\n      content.textContent = params.text;\n    }\n    show(content);\n  } else {\n    hide(content);\n  }\n\n  // Close button\n  if (params.showCloseButton) {\n    show(closeButton);\n  } else {\n    hide(closeButton);\n  }\n\n  // Custom Class\n  modal.className = swalClasses.modal;\n  if (params.customClass) {\n    addClass(modal, params.customClass);\n  }\n\n  // Progress steps\n  var progressStepsContainer = getProgressSteps();\n  var currentProgressStep = parseInt(params.currentProgressStep === null ? sweetAlert.getQueueStep() : params.currentProgressStep, 10);\n  if (params.progressSteps.length) {\n    show(progressStepsContainer);\n    empty(progressStepsContainer);\n    if (currentProgressStep >= params.progressSteps.length) {\n      console.warn('SweetAlert2: Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach(function (step, index) {\n      var circle = document.createElement('li');\n      addClass(circle, swalClasses.progresscircle);\n      circle.innerHTML = step;\n      if (index === currentProgressStep) {\n        addClass(circle, swalClasses.activeprogressstep);\n      }\n      progressStepsContainer.appendChild(circle);\n      if (index !== params.progressSteps.length - 1) {\n        var line = document.createElement('li');\n        addClass(line, swalClasses.progressline);\n        line.style.width = params.progressStepsDistance;\n        progressStepsContainer.appendChild(line);\n      }\n    });\n  } else {\n    hide(progressStepsContainer);\n  }\n\n  // Icon\n  var icons = getIcons();\n  for (var _i2 = 0; _i2 < icons.length; _i2++) {\n    hide(icons[_i2]);\n  }\n  if (params.type) {\n    var validType = false;\n    for (var iconType in iconTypes) {\n      if (params.type === iconType) {\n        validType = true;\n        break;\n      }\n    }\n    if (!validType) {\n      console.error('SweetAlert2: Unknown alert type: ' + params.type);\n      return false;\n    }\n    var icon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes[params.type]);\n    show(icon);\n\n    // Animate icon\n    if (params.animation) {\n      switch (params.type) {\n        case 'success':\n          addClass(icon, 'swal2-animate-success-icon');\n          addClass(icon.querySelector('.swal2-success-line-tip'), 'swal2-animate-success-line-tip');\n          addClass(icon.querySelector('.swal2-success-line-long'), 'swal2-animate-success-line-long');\n          break;\n        case 'error':\n          addClass(icon, 'swal2-animate-error-icon');\n          addClass(icon.querySelector('.swal2-x-mark'), 'swal2-animate-x-mark');\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  // Custom image\n  var image = getImage();\n  if (params.imageUrl) {\n    image.setAttribute('src', params.imageUrl);\n    show(image);\n\n    if (params.imageWidth) {\n      image.setAttribute('width', params.imageWidth);\n    } else {\n      image.removeAttribute('width');\n    }\n\n    if (params.imageHeight) {\n      image.setAttribute('height', params.imageHeight);\n    } else {\n      image.removeAttribute('height');\n    }\n\n    image.className = swalClasses.image;\n    if (params.imageClass) {\n      addClass(image, params.imageClass);\n    }\n  } else {\n    hide(image);\n  }\n\n  // Cancel button\n  if (params.showCancelButton) {\n    cancelButton.style.display = 'inline-block';\n  } else {\n    hide(cancelButton);\n  }\n\n  // Confirm button\n  if (params.showConfirmButton) {\n    removeStyleProperty(confirmButton, 'display');\n  } else {\n    hide(confirmButton);\n  }\n\n  // Buttons wrapper\n  if (!params.showConfirmButton && !params.showCancelButton) {\n    hide(buttonsWrapper);\n  } else {\n    show(buttonsWrapper);\n  }\n\n  // Edit text on cancel and confirm buttons\n  confirmButton.innerHTML = params.confirmButtonText;\n  cancelButton.innerHTML = params.cancelButtonText;\n\n  // Set buttons to selected background colors\n  if (params.buttonsStyling) {\n    confirmButton.style.backgroundColor = params.confirmButtonColor;\n    cancelButton.style.backgroundColor = params.cancelButtonColor;\n  }\n\n  // Add buttons custom classes\n  confirmButton.className = swalClasses.confirm;\n  addClass(confirmButton, params.confirmButtonClass);\n  cancelButton.className = swalClasses.cancel;\n  addClass(cancelButton, params.cancelButtonClass);\n\n  // Buttons styling\n  if (params.buttonsStyling) {\n    addClass(confirmButton, swalClasses.styled);\n    addClass(cancelButton, swalClasses.styled);\n  } else {\n    removeClass(confirmButton, swalClasses.styled);\n    removeClass(cancelButton, swalClasses.styled);\n\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = '';\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = '';\n  }\n\n  // CSS animation\n  if (params.animation === true) {\n    removeClass(modal, swalClasses.noanimation);\n  } else {\n    addClass(modal, swalClasses.noanimation);\n  }\n};\n\n/*\n * Animations\n */\nvar openModal = function openModal(animation, onComplete) {\n  var container = getContainer();\n  var modal = getModal();\n\n  if (animation) {\n    addClass(modal, swalClasses.show);\n    addClass(container, swalClasses.fade);\n    removeClass(modal, swalClasses.hide);\n  } else {\n    removeClass(modal, swalClasses.fade);\n  }\n  show(modal);\n\n  // scrolling is 'hidden' until animation is done, after that 'auto'\n  container.style.overflowY = 'hidden';\n  if (animationEndEvent && !hasClass(modal, swalClasses.noanimation)) {\n    modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\n      modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\n      container.style.overflowY = 'auto';\n    });\n  } else {\n    container.style.overflowY = 'auto';\n  }\n\n  addClass(document.documentElement, swalClasses.shown);\n  addClass(document.body, swalClasses.shown);\n  addClass(container, swalClasses.shown);\n  fixScrollbar();\n  iOSfix();\n  states.previousActiveElement = document.activeElement;\n  if (onComplete !== null && typeof onComplete === 'function') {\n    setTimeout(function () {\n      onComplete(modal);\n    });\n  }\n};\n\nvar fixScrollbar = function fixScrollbar() {\n  // for queues, do not do this more than once\n  if (states.previousBodyPadding !== null) {\n    return;\n  }\n  // if the body has overflow\n  if (document.body.scrollHeight > window.innerHeight) {\n    // add padding so the content doesn't shift after removal of scrollbar\n    states.previousBodyPadding = document.body.style.paddingRight;\n    document.body.style.paddingRight = measureScrollbar() + 'px';\n  }\n};\n\nvar undoScrollbar = function undoScrollbar() {\n  if (states.previousBodyPadding !== null) {\n    document.body.style.paddingRight = states.previousBodyPadding;\n    states.previousBodyPadding = null;\n  }\n};\n\n// Fix iOS scrolling http://stackoverflow.com/q/39626302/1331425\nvar iOSfix = function iOSfix() {\n  var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n  if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n    var offset = document.body.scrollTop;\n    document.body.style.top = offset * -1 + 'px';\n    addClass(document.body, swalClasses.iosfix);\n  }\n};\n\nvar undoIOSfix = function undoIOSfix() {\n  if (hasClass(document.body, swalClasses.iosfix)) {\n    var offset = parseInt(document.body.style.top, 10);\n    removeClass(document.body, swalClasses.iosfix);\n    document.body.style.top = '';\n    document.body.scrollTop = offset * -1;\n  }\n};\n\n// SweetAlert entry point\nvar sweetAlert = function sweetAlert() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args[0] === undefined) {\n    console.error('SweetAlert2 expects at least 1 attribute!');\n    return false;\n  }\n\n  var params = _extends({}, modalParams);\n\n  switch (_typeof(args[0])) {\n    case 'string':\n      params.title = args[0];\n      params.html = args[1];\n      params.type = args[2];\n\n      break;\n\n    case 'object':\n      _extends(params, args[0]);\n      params.extraParams = args[0].extraParams;\n\n      if (params.input === 'email' && params.inputValidator === null) {\n        params.inputValidator = function (email) {\n          return new Promise(function (resolve, reject) {\n            var emailRegex = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n            if (emailRegex.test(email)) {\n              resolve();\n            } else {\n              reject('Invalid email address');\n            }\n          });\n        };\n      }\n\n      if (params.input === 'url' && params.inputValidator === null) {\n        params.inputValidator = function (url) {\n          return new Promise(function (resolve, reject) {\n            var urlRegex = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\n            if (urlRegex.test(url)) {\n              resolve();\n            } else {\n              reject('Invalid URL');\n            }\n          });\n        };\n      }\n      break;\n\n    default:\n      console.error('SweetAlert2: Unexpected type of argument! Expected \"string\" or \"object\", got ' + _typeof(args[0]));\n      return false;\n  }\n\n  setParameters(params);\n\n  var container = getContainer();\n  var modal = getModal();\n\n  return new Promise(function (resolve, reject) {\n    // Close on timer\n    if (params.timer) {\n      modal.timeout = setTimeout(function () {\n        sweetAlert.closeModal(params.onClose);\n        reject('timer');\n      }, params.timer);\n    }\n\n    // Get input element by specified type or, if type isn't specified, by params.input\n    var getInput = function getInput(inputType) {\n      inputType = inputType || params.input;\n      if (!inputType) {\n        return null;\n      }\n      switch (inputType) {\n        case 'select':\n        case 'textarea':\n        case 'file':\n          return getChildByClass(modal, swalClasses[inputType]);\n        case 'checkbox':\n          return modal.querySelector('.' + swalClasses.checkbox + ' input');\n        case 'radio':\n          return modal.querySelector('.' + swalClasses.radio + ' input:checked') || modal.querySelector('.' + swalClasses.radio + ' input:first-child');\n        case 'range':\n          return modal.querySelector('.' + swalClasses.range + ' input');\n        default:\n          return getChildByClass(modal, swalClasses.input);\n      }\n    };\n\n    // Get the value of the modal input\n    var getInputValue = function getInputValue() {\n      var input = getInput();\n      if (!input) {\n        return null;\n      }\n      switch (params.input) {\n        case 'checkbox':\n          return input.checked ? 1 : 0;\n        case 'radio':\n          return input.checked ? input.value : null;\n        case 'file':\n          return input.files.length ? input.files[0] : null;\n        default:\n          return params.inputAutoTrim ? input.value.trim() : input.value;\n      }\n    };\n\n    // input autofocus\n    if (params.input) {\n      setTimeout(function () {\n        var input = getInput();\n        if (input) {\n          focusInput(input);\n        }\n      }, 0);\n    }\n\n    var confirm = function confirm(value) {\n      if (params.showLoaderOnConfirm) {\n        sweetAlert.showLoading();\n      }\n\n      if (params.preConfirm) {\n        params.preConfirm(value, params.extraParams).then(function (preConfirmValue) {\n          sweetAlert.closeModal(params.onClose);\n          resolve(preConfirmValue || value);\n        }, function (error) {\n          sweetAlert.hideLoading();\n          if (error) {\n            sweetAlert.showValidationError(error);\n          }\n        });\n      } else {\n        sweetAlert.closeModal(params.onClose);\n        resolve(value);\n      }\n    };\n\n    // Mouse interactions\n    var onButtonEvent = function onButtonEvent(event) {\n      var e = event || window.event;\n      var target = e.target || e.srcElement;\n      var confirmButton = getConfirmButton();\n      var cancelButton = getCancelButton();\n      var targetedConfirm = confirmButton && (confirmButton === target || confirmButton.contains(target));\n      var targetedCancel = cancelButton && (cancelButton === target || cancelButton.contains(target));\n\n      switch (e.type) {\n        case 'mouseover':\n        case 'mouseup':\n          if (params.buttonsStyling) {\n            if (targetedConfirm) {\n              confirmButton.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.1);\n            } else if (targetedCancel) {\n              cancelButton.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.1);\n            }\n          }\n          break;\n        case 'mouseout':\n          if (params.buttonsStyling) {\n            if (targetedConfirm) {\n              confirmButton.style.backgroundColor = params.confirmButtonColor;\n            } else if (targetedCancel) {\n              cancelButton.style.backgroundColor = params.cancelButtonColor;\n            }\n          }\n          break;\n        case 'mousedown':\n          if (params.buttonsStyling) {\n            if (targetedConfirm) {\n              confirmButton.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.2);\n            } else if (targetedCancel) {\n              cancelButton.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.2);\n            }\n          }\n          break;\n        case 'click':\n          // Clicked 'confirm'\n          if (targetedConfirm && sweetAlert.isVisible()) {\n            sweetAlert.disableButtons();\n            if (params.input) {\n              var inputValue = getInputValue();\n\n              if (params.inputValidator) {\n                sweetAlert.disableInput();\n                params.inputValidator(inputValue, params.extraParams).then(function () {\n                  sweetAlert.enableButtons();\n                  sweetAlert.enableInput();\n                  confirm(inputValue);\n                }, function (error) {\n                  sweetAlert.enableButtons();\n                  sweetAlert.enableInput();\n                  if (error) {\n                    sweetAlert.showValidationError(error);\n                  }\n                });\n              } else {\n                confirm(inputValue);\n              }\n            } else {\n              confirm(true);\n            }\n\n            // Clicked 'cancel'\n          } else if (targetedCancel && sweetAlert.isVisible()) {\n            sweetAlert.disableButtons();\n            sweetAlert.closeModal(params.onClose);\n            reject('cancel');\n          }\n          break;\n        default:\n      }\n    };\n\n    var buttons = modal.querySelectorAll('button');\n    for (var i = 0; i < buttons.length; i++) {\n      buttons[i].onclick = onButtonEvent;\n      buttons[i].onmouseover = onButtonEvent;\n      buttons[i].onmouseout = onButtonEvent;\n      buttons[i].onmousedown = onButtonEvent;\n    }\n\n    // Closing modal by close button\n    getCloseButton().onclick = function () {\n      sweetAlert.closeModal(params.onClose);\n      reject('close');\n    };\n\n    // Closing modal by overlay click\n    container.onclick = function (e) {\n      if (e.target !== container) {\n        return;\n      }\n      if (params.allowOutsideClick) {\n        sweetAlert.closeModal(params.onClose);\n        reject('overlay');\n      }\n    };\n\n    var buttonsWrapper = getButtonsWrapper();\n    var confirmButton = getConfirmButton();\n    var cancelButton = getCancelButton();\n\n    // Reverse buttons (Confirm on the right side)\n    if (params.reverseButtons) {\n      confirmButton.parentNode.insertBefore(cancelButton, confirmButton);\n    } else {\n      confirmButton.parentNode.insertBefore(confirmButton, cancelButton);\n    }\n\n    // Focus handling\n    var setFocus = function setFocus(index, increment) {\n      var focusableElements = getFocusableElements(params.focusCancel);\n      // search for visible elements and select the next possible match\n      for (var _i3 = 0; _i3 < focusableElements.length; _i3++) {\n        index = index + increment;\n\n        // rollover to first item\n        if (index === focusableElements.length) {\n          index = 0;\n\n          // go to last item\n        } else if (index === -1) {\n          index = focusableElements.length - 1;\n        }\n\n        // determine if element is visible\n        var el = focusableElements[index];\n        if (isVisible(el)) {\n          return el.focus();\n        }\n      }\n    };\n\n    var handleKeyDown = function handleKeyDown(event) {\n      var e = event || window.event;\n      var keyCode = e.keyCode || e.which;\n\n      if ([9, 13, 32, 27, 37, 38, 39, 40].indexOf(keyCode) === -1) {\n        // Don't do work on keys we don't care about.\n        return;\n      }\n\n      var targetElement = e.target || e.srcElement;\n\n      var focusableElements = getFocusableElements(params.focusCancel);\n      var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n      for (var _i4 = 0; _i4 < focusableElements.length; _i4++) {\n        if (targetElement === focusableElements[_i4]) {\n          btnIndex = _i4;\n          break;\n        }\n      }\n\n      // TAB\n      if (keyCode === 9) {\n        if (!e.shiftKey) {\n          // Cycle to the next button\n          setFocus(btnIndex, 1);\n        } else {\n          // Cycle to the prev button\n          setFocus(btnIndex, -1);\n        }\n        e.stopPropagation();\n        e.preventDefault();\n\n        // ARROWS - switch focus between buttons\n      } else if (keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40) {\n        // focus Cancel button if Confirm button is currently focused\n        if (document.activeElement === confirmButton && isVisible(cancelButton)) {\n          cancelButton.focus();\n          // and vice versa\n        } else if (document.activeElement === cancelButton && isVisible(confirmButton)) {\n          confirmButton.focus();\n        }\n\n        // ENTER/SPACE\n      } else if (keyCode === 13 || keyCode === 32) {\n        if (btnIndex === -1 && params.allowEnterKey) {\n          // ENTER/SPACE clicked outside of a button.\n          if (params.focusCancel) {\n            fireClick(cancelButton, e);\n          } else {\n            fireClick(confirmButton, e);\n          }\n          e.stopPropagation();\n          e.preventDefault();\n        }\n\n        // ESC\n      } else if (keyCode === 27 && params.allowEscapeKey === true) {\n        sweetAlert.closeModal(params.onClose);\n        reject('esc');\n      }\n    };\n\n    states.previousWindowKeyDown = window.onkeydown;\n    window.onkeydown = handleKeyDown;\n\n    // Loading state\n    if (params.buttonsStyling) {\n      confirmButton.style.borderLeftColor = params.confirmButtonColor;\n      confirmButton.style.borderRightColor = params.confirmButtonColor;\n    }\n\n    /**\n     * Show spinner instead of Confirm button and disable Cancel button\n     */\n    sweetAlert.showLoading = sweetAlert.enableLoading = function () {\n      show(buttonsWrapper);\n      show(confirmButton, 'inline-block');\n      addClass(buttonsWrapper, swalClasses.loading);\n      addClass(modal, swalClasses.loading);\n      confirmButton.disabled = true;\n      cancelButton.disabled = true;\n    };\n\n    /**\n     * Show spinner instead of Confirm button and disable Cancel button\n     */\n    sweetAlert.hideLoading = sweetAlert.disableLoading = function () {\n      if (!params.showConfirmButton) {\n        hide(confirmButton);\n        if (!params.showCancelButton) {\n          hide(getButtonsWrapper());\n        }\n      }\n      removeClass(buttonsWrapper, swalClasses.loading);\n      removeClass(modal, swalClasses.loading);\n      confirmButton.disabled = false;\n      cancelButton.disabled = false;\n    };\n\n    sweetAlert.getTitle = function () {\n      return getTitle();\n    };\n    sweetAlert.getContent = function () {\n      return getContent();\n    };\n    sweetAlert.getInput = function () {\n      return getInput();\n    };\n    sweetAlert.getImage = function () {\n      return getImage();\n    };\n    sweetAlert.getButtonsWrapper = function () {\n      return getButtonsWrapper();\n    };\n    sweetAlert.getConfirmButton = function () {\n      return getConfirmButton();\n    };\n    sweetAlert.getCancelButton = function () {\n      return getCancelButton();\n    };\n\n    sweetAlert.enableButtons = function () {\n      confirmButton.disabled = false;\n      cancelButton.disabled = false;\n    };\n\n    sweetAlert.disableButtons = function () {\n      confirmButton.disabled = true;\n      cancelButton.disabled = true;\n    };\n\n    sweetAlert.enableConfirmButton = function () {\n      confirmButton.disabled = false;\n    };\n\n    sweetAlert.disableConfirmButton = function () {\n      confirmButton.disabled = true;\n    };\n\n    sweetAlert.enableInput = function () {\n      var input = getInput();\n      if (!input) {\n        return false;\n      }\n      if (input.type === 'radio') {\n        var radiosContainer = input.parentNode.parentNode;\n        var radios = radiosContainer.querySelectorAll('input');\n        for (var _i5 = 0; _i5 < radios.length; _i5++) {\n          radios[_i5].disabled = false;\n        }\n      } else {\n        input.disabled = false;\n      }\n    };\n\n    sweetAlert.disableInput = function () {\n      var input = getInput();\n      if (!input) {\n        return false;\n      }\n      if (input && input.type === 'radio') {\n        var radiosContainer = input.parentNode.parentNode;\n        var radios = radiosContainer.querySelectorAll('input');\n        for (var _i6 = 0; _i6 < radios.length; _i6++) {\n          radios[_i6].disabled = true;\n        }\n      } else {\n        input.disabled = true;\n      }\n    };\n\n    // Set modal min-height to disable scrolling inside the modal\n    sweetAlert.recalculateHeight = debounce(function () {\n      var modal = getModal();\n      if (!modal) {\n        return;\n      }\n      var prevState = modal.style.display;\n      modal.style.minHeight = '';\n      show(modal);\n      modal.style.minHeight = modal.scrollHeight + 1 + 'px';\n      modal.style.display = prevState;\n    }, 50);\n\n    // Show block with validation error\n    sweetAlert.showValidationError = function (error) {\n      var validationError = getValidationError();\n      validationError.innerHTML = error;\n      show(validationError);\n\n      var input = getInput();\n      if (input) {\n        focusInput(input);\n        addClass(input, swalClasses.inputerror);\n      }\n    };\n\n    // Hide block with validation error\n    sweetAlert.resetValidationError = function () {\n      var validationError = getValidationError();\n      hide(validationError);\n      sweetAlert.recalculateHeight();\n\n      var input = getInput();\n      if (input) {\n        removeClass(input, swalClasses.inputerror);\n      }\n    };\n\n    sweetAlert.getProgressSteps = function () {\n      return params.progressSteps;\n    };\n\n    sweetAlert.setProgressSteps = function (progressSteps) {\n      params.progressSteps = progressSteps;\n      setParameters(params);\n    };\n\n    sweetAlert.showProgressSteps = function () {\n      show(getProgressSteps());\n    };\n\n    sweetAlert.hideProgressSteps = function () {\n      hide(getProgressSteps());\n    };\n\n    sweetAlert.enableButtons();\n    sweetAlert.hideLoading();\n    sweetAlert.resetValidationError();\n\n    // inputs\n    var inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n    var input = void 0;\n    for (var _i7 = 0; _i7 < inputTypes.length; _i7++) {\n      var inputClass = swalClasses[inputTypes[_i7]];\n      var inputContainer = getChildByClass(modal, inputClass);\n      input = getInput(inputTypes[_i7]);\n\n      // set attributes\n      if (input) {\n        for (var j in input.attributes) {\n          if (input.attributes.hasOwnProperty(j)) {\n            var attrName = input.attributes[j].name;\n            if (attrName !== 'type' && attrName !== 'value') {\n              input.removeAttribute(attrName);\n            }\n          }\n        }\n        for (var attr in params.inputAttributes) {\n          input.setAttribute(attr, params.inputAttributes[attr]);\n        }\n      }\n\n      // set class\n      inputContainer.className = inputClass;\n      if (params.inputClass) {\n        addClass(inputContainer, params.inputClass);\n      }\n\n      hide(inputContainer);\n    }\n\n    var populateInputOptions = void 0;\n    switch (params.input) {\n      case 'text':\n      case 'email':\n      case 'password':\n      case 'number':\n      case 'tel':\n      case 'url':\n        input = getChildByClass(modal, swalClasses.input);\n        input.value = params.inputValue;\n        input.placeholder = params.inputPlaceholder;\n        input.type = params.input;\n        show(input);\n        break;\n      case 'file':\n        input = getChildByClass(modal, swalClasses.file);\n        input.placeholder = params.inputPlaceholder;\n        input.type = params.input;\n        show(input);\n        break;\n      case 'range':\n        var range = getChildByClass(modal, swalClasses.range);\n        var rangeInput = range.querySelector('input');\n        var rangeOutput = range.querySelector('output');\n        rangeInput.value = params.inputValue;\n        rangeInput.type = params.input;\n        rangeOutput.value = params.inputValue;\n        show(range);\n        break;\n      case 'select':\n        var select = getChildByClass(modal, swalClasses.select);\n        select.innerHTML = '';\n        if (params.inputPlaceholder) {\n          var placeholder = document.createElement('option');\n          placeholder.innerHTML = params.inputPlaceholder;\n          placeholder.value = '';\n          placeholder.disabled = true;\n          placeholder.selected = true;\n          select.appendChild(placeholder);\n        }\n        populateInputOptions = function populateInputOptions(inputOptions) {\n          for (var optionValue in inputOptions) {\n            var option = document.createElement('option');\n            option.value = optionValue;\n            option.innerHTML = inputOptions[optionValue];\n            if (params.inputValue === optionValue) {\n              option.selected = true;\n            }\n            select.appendChild(option);\n          }\n          show(select);\n          select.focus();\n        };\n        break;\n      case 'radio':\n        var radio = getChildByClass(modal, swalClasses.radio);\n        radio.innerHTML = '';\n        populateInputOptions = function populateInputOptions(inputOptions) {\n          for (var radioValue in inputOptions) {\n            var radioInput = document.createElement('input');\n            var radioLabel = document.createElement('label');\n            var radioLabelSpan = document.createElement('span');\n            radioInput.type = 'radio';\n            radioInput.name = swalClasses.radio;\n            radioInput.value = radioValue;\n            if (params.inputValue === radioValue) {\n              radioInput.checked = true;\n            }\n            radioLabelSpan.innerHTML = inputOptions[radioValue];\n            radioLabel.appendChild(radioInput);\n            radioLabel.appendChild(radioLabelSpan);\n            radioLabel.for = radioInput.id;\n            radio.appendChild(radioLabel);\n          }\n          show(radio);\n          var radios = radio.querySelectorAll('input');\n          if (radios.length) {\n            radios[0].focus();\n          }\n        };\n        break;\n      case 'checkbox':\n        var checkbox = getChildByClass(modal, swalClasses.checkbox);\n        var checkboxInput = getInput('checkbox');\n        checkboxInput.type = 'checkbox';\n        checkboxInput.value = 1;\n        checkboxInput.id = swalClasses.checkbox;\n        checkboxInput.checked = Boolean(params.inputValue);\n        var label = checkbox.getElementsByTagName('span');\n        if (label.length) {\n          checkbox.removeChild(label[0]);\n        }\n        label = document.createElement('span');\n        label.innerHTML = params.inputPlaceholder;\n        checkbox.appendChild(label);\n        show(checkbox);\n        break;\n      case 'textarea':\n        var textarea = getChildByClass(modal, swalClasses.textarea);\n        textarea.value = params.inputValue;\n        textarea.placeholder = params.inputPlaceholder;\n        show(textarea);\n        break;\n      case null:\n        break;\n      default:\n        console.error('SweetAlert2: Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"' + params.input + '\"');\n        break;\n    }\n\n    if (params.input === 'select' || params.input === 'radio') {\n      if (params.inputOptions instanceof Promise) {\n        sweetAlert.showLoading();\n        params.inputOptions.then(function (inputOptions) {\n          sweetAlert.hideLoading();\n          populateInputOptions(inputOptions);\n        });\n      } else if (_typeof(params.inputOptions) === 'object') {\n        populateInputOptions(params.inputOptions);\n      } else {\n        console.error('SweetAlert2: Unexpected type of inputOptions! Expected object or Promise, got ' + _typeof(params.inputOptions));\n      }\n    }\n\n    openModal(params.animation, params.onOpen);\n\n    // Focus the first element (input or button)\n    if (params.allowEnterKey) {\n      setFocus(-1, 1);\n    } else {\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    }\n\n    // fix scroll\n    getContainer().scrollTop = 0;\n\n    // Observe changes inside the modal and adjust height\n    if (typeof MutationObserver !== 'undefined' && !swal2Observer) {\n      swal2Observer = new MutationObserver(sweetAlert.recalculateHeight);\n      swal2Observer.observe(modal, { childList: true, characterData: true, subtree: true });\n    }\n  });\n};\n\n/*\n * Global function to determine if swal2 modal is shown\n */\nsweetAlert.isVisible = function () {\n  return !!getModal();\n};\n\n/*\n * Global function for chaining sweetAlert modals\n */\nsweetAlert.queue = function (steps) {\n  queue = steps;\n  var resetQueue = function resetQueue() {\n    queue = [];\n    document.body.removeAttribute('data-swal2-queue-step');\n  };\n  var queueResult = [];\n  return new Promise(function (resolve, reject) {\n    (function step(i, callback) {\n      if (i < queue.length) {\n        document.body.setAttribute('data-swal2-queue-step', i);\n\n        sweetAlert(queue[i]).then(function (result) {\n          queueResult.push(result);\n          step(i + 1, callback);\n        }, function (dismiss) {\n          resetQueue();\n          reject(dismiss);\n        });\n      } else {\n        resetQueue();\n        resolve(queueResult);\n      }\n    })(0);\n  });\n};\n\n/*\n * Global function for getting the index of current modal in queue\n */\nsweetAlert.getQueueStep = function () {\n  return document.body.getAttribute('data-swal2-queue-step');\n};\n\n/*\n * Global function for inserting a modal to the queue\n */\nsweetAlert.insertQueueStep = function (step, index) {\n  if (index && index < queue.length) {\n    return queue.splice(index, 0, step);\n  }\n  return queue.push(step);\n};\n\n/*\n * Global function for deleting a modal from the queue\n */\nsweetAlert.deleteQueueStep = function (index) {\n  if (typeof queue[index] !== 'undefined') {\n    queue.splice(index, 1);\n  }\n};\n\n/*\n * Global function to close sweetAlert\n */\nsweetAlert.close = sweetAlert.closeModal = function (onComplete) {\n  var container = getContainer();\n  var modal = getModal();\n  if (!modal) {\n    return;\n  }\n  removeClass(modal, swalClasses.show);\n  addClass(modal, swalClasses.hide);\n  clearTimeout(modal.timeout);\n\n  resetPrevState();\n\n  var removeModalAndResetState = function removeModalAndResetState() {\n    if (container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n    removeClass(document.documentElement, swalClasses.shown);\n    removeClass(document.body, swalClasses.shown);\n    undoScrollbar();\n    undoIOSfix();\n  };\n\n  // If animation is supported, animate\n  if (animationEndEvent && !hasClass(modal, swalClasses.noanimation)) {\n    modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\n      modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\n      if (hasClass(modal, swalClasses.hide)) {\n        removeModalAndResetState();\n      }\n    });\n  } else {\n    // Otherwise, remove immediately\n    removeModalAndResetState();\n  }\n  if (onComplete !== null && typeof onComplete === 'function') {\n    setTimeout(function () {\n      onComplete(modal);\n    });\n  }\n};\n\n/*\n * Global function to click 'Confirm' button\n */\nsweetAlert.clickConfirm = function () {\n  return getConfirmButton().click();\n};\n\n/*\n * Global function to click 'Cancel' button\n */\nsweetAlert.clickCancel = function () {\n  return getCancelButton().click();\n};\n\n/**\n * Set default params for each popup\n * @param {Object} userParams\n */\nsweetAlert.setDefaults = function (userParams) {\n  if (!userParams || (typeof userParams === 'undefined' ? 'undefined' : _typeof(userParams)) !== 'object') {\n    return console.error('SweetAlert2: the argument for setDefaults() is required and has to be a object');\n  }\n\n  for (var param in userParams) {\n    if (!defaultParams.hasOwnProperty(param) && param !== 'extraParams') {\n      console.warn('SweetAlert2: Unknown parameter \"' + param + '\"');\n      delete userParams[param];\n    }\n  }\n\n  _extends(modalParams, userParams);\n};\n\n/**\n * Reset default params for each popup\n */\nsweetAlert.resetDefaults = function () {\n  modalParams = _extends({}, defaultParams);\n};\n\nsweetAlert.noop = function () {};\n\nsweetAlert.version = '6.6.1';\n\nsweetAlert.default = sweetAlert;\n\nreturn sweetAlert;\n\n})));\nif (window.Sweetalert2) window.sweetAlert = window.swal = window.Sweetalert2;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}